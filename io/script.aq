// Single-line comment!
for username, website in login {
    
}

test "'n' check" {
    var n = 2
    n += 5
    print(n)
    n = 6
    print(n)
    
    assert n == 6
}

'outer:
for i in 0..30 {
    for j in 5..=12 {
        if i == j {
            continue
        }

        add(i, j << 2 * 4)
    }
    break 'top
}

/*
Some multiline comment...

/* with a multiline comment inside of that! */
Woah.
*/ 

if true ^| false {
    let a: bool, b: float, c: string = true, 2.7 - 1, "Hello, world!"
    let ch1, ch2 = 'f'
    var thing: uint = 50
} else if false {
    var t = 2, 5
} else { let b = -3 }

let optional: string? = null

let t = "x = $(/* I'm a comment! */ 3), y = $(true)."
let thing = t.x?.y.z

let complexThing: bool = !((1 - 3.4) ^ 2.65 >= 8.7) !& true
let b = 5 - if !complexThing { break 3; } else { break 2; }

pub let LineSize = 5

break 'thing
break 'otherThing -1
break "hello"

return (7 * x - 4) ^ 5
return
yield "true == $(!false)"

defer let x = 3
defer {
    3 + 2
    print(7)
}

break 'e'

pub func add(a, b: int, c: int = 0): int {
    return a + b + c
}

let someTuple = (-8, "talk", true | false, 'â‚¬', func() { println("Hi there!") })

pub struct Point {
    x, y: float,
}

struct DBStudent {
    id: uint,
    firstName, lastName: string,
    middleName: string? = null,
    grade: uint,
    absences: uint = 0,
}

let digitsOfPi = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3]

// Should be array[int], but there are no generics yet
tag reversed(arr: array): array {
    // ...
}

let countdown = reversed[1, 2, 3]
asm"mov edx, len"